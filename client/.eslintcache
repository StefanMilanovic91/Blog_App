[{"D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\index.js":"1","D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\App.js":"2","D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\store\\store.js":"3","D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\store\\reducers\\index.js":"4","D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\store\\reducers\\authReducer.js":"5","D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\store\\types.js":"6","D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\components\\layout\\Navbar\\Navbar.js":"7","D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\store\\actions\\authActions.js":"8","D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\services\\auth-service\\AuthService.js":"9","D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\components\\layout\\Alert\\Alert.js":"10","D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\components\\pages\\Topics\\Topics.js":"11","D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\components\\pages\\Register\\Register.js":"12","D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\components\\pages\\Login\\Login.js":"13","D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\store\\reducers\\alertReducer.js":"14","D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\store\\actions\\alertActions.js":"15","D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\services\\topic-services\\TopicServices.js":"16","D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\components\\pages\\TopicPosts\\TopicPosts.js":"17","D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\components\\pages\\Topics\\Topic\\Topic.js":"18","D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\store\\reducers\\topicReducer.js":"19","D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\store\\actions\\topicActions.js":"20"},{"size":474,"mtime":1609887677040,"results":"21","hashOfConfig":"22"},{"size":2178,"mtime":1610306228367,"results":"23","hashOfConfig":"22"},{"size":408,"mtime":1609806109528,"results":"24","hashOfConfig":"22"},{"size":268,"mtime":1610293896206,"results":"25","hashOfConfig":"22"},{"size":1162,"mtime":1610239060296,"results":"26","hashOfConfig":"22"},{"size":321,"mtime":1610293690822,"results":"27","hashOfConfig":"22"},{"size":3104,"mtime":1610204373580,"results":"28","hashOfConfig":"22"},{"size":575,"mtime":1610204373630,"results":"29","hashOfConfig":"22"},{"size":793,"mtime":1610225955546,"results":"30","hashOfConfig":"22"},{"size":645,"mtime":1610209219420,"results":"31","hashOfConfig":"22"},{"size":5055,"mtime":1610360856945,"results":"32","hashOfConfig":"22"},{"size":3046,"mtime":1610211573701,"results":"33","hashOfConfig":"22"},{"size":3017,"mtime":1610226082494,"results":"34","hashOfConfig":"22"},{"size":737,"mtime":1610204373632,"results":"35","hashOfConfig":"22"},{"size":304,"mtime":1610204373629,"results":"36","hashOfConfig":"22"},{"size":805,"mtime":1610452777587,"results":"37","hashOfConfig":"22"},{"size":3482,"mtime":1610451797867,"results":"38","hashOfConfig":"22"},{"size":722,"mtime":1610306472678,"results":"39","hashOfConfig":"22"},{"size":487,"mtime":1610294482637,"results":"40","hashOfConfig":"22"},{"size":183,"mtime":1610293854698,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1h5n2ox",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\index.js",[],["85","86"],"D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\App.js",["87"],"import React, { Fragment, useEffect } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Navbar from './components/layout/Navbar/Navbar';\r\nimport Alert from './components/layout/Alert/Alert';\r\n\r\nimport Topics from './components/pages/Topics/Topics';\r\nimport TopicPosts from './components/pages/TopicPosts/TopicPosts';\r\nimport Register from './components/pages/Register/Register';\r\nimport Login from './components/pages/Login/Login';\r\n\r\nimport { endOfAuthLoading, logInUser, logOutUser } from './store/actions/authActions';\r\nimport AuthService from './services/auth-service/AuthService';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\n\r\n\r\n\r\nconst App = ({ alert, endOfAuthLoading, logInUser, logOutUser }) => { \r\n\r\n    useEffect(() => { \r\n\r\n        // check local data\r\n        let token = AuthService.getLocalData();\r\n        if (token !== null) {\r\n            let decodedToken = jwt_decode(token);\r\n            let currTime = Math.floor(Date.now() / 1000);\r\n\r\n            if (currTime > decodedToken.exp) {\r\n\r\n                // logout User\r\n                logOutUser();\r\n                AuthService.removeLocalData();\r\n            } else {\r\n                logInUser({token, ...decodedToken}); \r\n            }\r\n            \r\n        }\r\n        endOfAuthLoading();\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Navbar />\r\n            \r\n            <Alert alert={alert} />\r\n            \r\n\r\n            <Switch>\r\n                <Route exact path=\"/\" render={() => <Redirect to=\"/topics\" />} />\r\n\r\n                <Route exact path=\"/topics\" component={Topics} /> \r\n                <Route path=\"/topics/topic_posts/:title/:id\" component={TopicPosts} />\r\n                <Route path=\"/register\" component={Register} />\r\n                <Route path=\"/login\" component={Login} />\r\n                \r\n                <Redirect to=\"/topics\" />\r\n            </Switch>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        alert: state.alertReducer.alert\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { endOfAuthLoading, logInUser, logOutUser })(App)\r\n","D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\store\\store.js",[],"D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\store\\reducers\\index.js",[],"D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\store\\reducers\\authReducer.js",[],"D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\store\\types.js",[],"D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\components\\layout\\Navbar\\Navbar.js",[],"D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\store\\actions\\authActions.js",[],"D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\services\\auth-service\\AuthService.js",[],"D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\components\\layout\\Alert\\Alert.js",[],"D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\components\\pages\\Topics\\Topics.js",["88","89"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport TopicServices from '../../../services/topic-services/TopicServices';\r\nimport AuthService from '../../../services/auth-service/AuthService';\r\n\r\nimport Topic from './Topic/Topic';\r\nimport Alert from '../../layout/Alert/Alert';\r\n\r\nimport { setTopics } from '../../../store/actions/topicActions';\r\n\r\nconst Topics = ({isAuth, loading, name, topics, setTopics}) => {\r\n\r\n    const [loader, setLoader] = useState(false);\r\n    const [allTopics, setAllTopics] = useState(null);\r\n    \r\n    // msg alert from response\r\n    const [alert, setAlert] = useState(null);\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        if (topics.length === 0 && topics !== null) {\r\n\r\n            // get all topics\r\n            TopicServices.getAllTopics().then(res => res.data).then(data => {\r\n                setTopics(data.topics);\r\n                let allTopics = data.topics.map(topic => <Topic topic={topic} key={topic._id} />);\r\n                setAllTopics(allTopics);\r\n\r\n            }).catch(err => {\r\n\r\n                if (err.response.data.errors) {\r\n                    console.log(err.response.data.errors[0].msg);\r\n                    setAlert({ msg: err.response.data.errors[0].msg, class: 'danger' });\r\n                    setTimeout(() => setAlert(null), 3000);\r\n                }          \r\n            })\r\n        } else {\r\n            let allTopics = topics.map(topic => <Topic topic={topic} key={topic._id} />);\r\n            setAllTopics(allTopics);\r\n        }\r\n        \r\n    }, []);\r\n\r\n    \r\n    \r\n    \r\n\r\n\r\n    // add new topic request\r\n    const [newTopic, setNewTopic] = useState({ title: \"\" });\r\n\r\n    const submitTopic = (e) => {\r\n        e.preventDefault();\r\n        setLoader(true);\r\n\r\n        let token = AuthService.getLocalData();\r\n        if (token) {\r\n            TopicServices.addTopic({ title: newTopic.title }, token).then(res => res.data).then(data => {\r\n                // update topics\r\n                let allTopics = data.topics.map(topic => <Topic topic={topic} key={topic._id} />);\r\n                setAllTopics(allTopics);\r\n\r\n                setAlert({msg: data.msg, class: \"success\"});\r\n                setLoader(false);\r\n                setTimeout(() => setAlert(null), 3000);\r\n            }).catch(err => {\r\n                setAlert({msg: err.response.data.errors[0].msg, class: 'danger'});\r\n                setLoader(false);\r\n                setTimeout(() => setAlert(null), 3000);\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // subtitle (login/logout)\r\n    let subTitle = <Fragment><span className=\"text-danger\">Hello Dear Guest,</span> please log in for a full user expirience.</Fragment>;\r\n    if (isAuth && !loading) {\r\n    subTitle = <Fragment> <span className=\"text-danger\">Hello {name},</span> let's blog...</Fragment>\r\n    }\r\n    \r\n    // add topic input (login/logout)\r\n    let addTopic = <Fragment>\r\n\r\n                        <div className=\"Topics__add-new-topics\">\r\n                            <div className=\"row mt-5 mb-3\">\r\n                                <h3 className=\"ml-3\">Add New Topic</h3>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 col-md-8\">\r\n                                    <div className=\"form-group\">\r\n                                        <input onChange={(e) => setNewTopic({ ...newTopic, [e.target.name]: e.target.value })} value={newTopic.title} type=\"text\" className=\"form-control\" placeholder=\"Name of the New Topic\" name=\"title\" />\r\n                                    </div>\r\n                                    <button onClick={submitTopic} className=\"btn btn-info d-block mr-auto\">{loader ? <div className=\"lds-dual-ring\"></div> : 'ADD TOPIC'}</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                </Fragment>\r\n\r\n    \r\n\r\n    \r\n\r\n    return (\r\n\r\n        <div className=\"Page Topics\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center flex-column\">\r\n                    <h1 className=\"display-4 pt-5 ml-3 mb-4\">Popular Topics</h1>\r\n                    <p className=\"Topics__sub-title mb-5 pb-5 ml-3\">{!loading && subTitle}</p>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {allTopics === null ? <div className=\"lds-dual-ring-big mx-auto\"></div> : allTopics}\r\n                </div>\r\n                <Alert alert={alert} />\r\n                {isAuth && !loading && addTopic}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.authReducer.isAuthenticated,\r\n        loading: state.authReducer.loading,\r\n        name: state.authReducer.user !== null && state.authReducer.user.name,\r\n        topics: state.topicReducer.topics\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setTopics })(Topics)\r\n","D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\components\\pages\\Register\\Register.js",[],"D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\components\\pages\\Login\\Login.js",[],"D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\store\\reducers\\alertReducer.js",[],"D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\store\\actions\\alertActions.js",[],"D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\services\\topic-services\\TopicServices.js",[],"D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\components\\pages\\TopicPosts\\TopicPosts.js",["90","91","92","93","94"],"D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\components\\pages\\Topics\\Topic\\Topic.js",[],"D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\store\\reducers\\topicReducer.js",[],"D:\\Web\\Practice\\ReactJS_NodeJS\\blog_app\\client\\src\\store\\actions\\topicActions.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":42,"column":8,"nodeType":"101","endLine":42,"endColumn":10,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":3,"column":10,"nodeType":"105","messageId":"106","endLine":3,"endColumn":17},{"ruleId":"99","severity":1,"message":"107","line":44,"column":8,"nodeType":"101","endLine":44,"endColumn":10,"suggestions":"108"},{"ruleId":"103","severity":1,"message":"109","line":14,"column":12,"nodeType":"105","messageId":"106","endLine":14,"endColumn":18},{"ruleId":"103","severity":1,"message":"110","line":14,"column":20,"nodeType":"105","messageId":"106","endLine":14,"endColumn":29},{"ruleId":"103","severity":1,"message":"111","line":22,"column":17,"nodeType":"105","messageId":"106","endLine":22,"endColumn":20},{"ruleId":"112","severity":1,"message":"113","line":22,"column":43,"nodeType":"114","messageId":"115","endLine":22,"endColumn":45},{"ruleId":"99","severity":1,"message":"116","line":37,"column":8,"nodeType":"101","endLine":37,"endColumn":10,"suggestions":"117"},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'endOfAuthLoading', 'logInUser', and 'logOutUser'. Either include them or remove the dependency array. If 'endOfAuthLoading' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["120"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'setTopics' and 'topics'. Either include them or remove the dependency array. If 'setTopics' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["121"],"'loader' is assigned a value but never used.","'setLoader' is assigned a value but never used.","'tpc' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'history', 'id', and 'topics'. Either include them or remove the dependency array.",["122"],"no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},"Update the dependencies array to be: [endOfAuthLoading, logInUser, logOutUser]",{"range":"129","text":"130"},"Update the dependencies array to be: [setTopics, topics]",{"range":"131","text":"132"},"Update the dependencies array to be: [history, id, topics]",{"range":"133","text":"134"},[1345,1347],"[endOfAuthLoading, logInUser, logOutUser]",[1614,1616],"[setTopics, topics]",[1306,1308],"[history, id, topics]"]